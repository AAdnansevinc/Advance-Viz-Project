theme(plot.title = element_text(size = 20, hjust = 0.5)) +
# facet_wrap(~continent) +
# Here comes the gganimate specific bits
labs(title = 'Happiness vs. GDP per Capita Over Time in {round(frame_time,0)}', x = 'GDP per capita', y = 'Happiness')
a
filter(data, Year==2021)
a <- ggplot(filter(data, Year==2021), aes(GDPPer, HappinessScore, size = pop)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
# scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
geom_label_repel(aes(label = Country), size = 2, na.rm = TRUE) +
theme(plot.title = element_text(size = 20, hjust = 0.5)) +
# facet_wrap(~continent) +
# Here comes the gganimate specific bits
labs(title = 'Happiness vs. GDP per Capita Over Time in {round(frame_time,0)}', x = 'GDP per capita', y = 'Happiness')
a
a <- ggplot(filter(data, Year==2021), aes(GDPPer, HappinessScore, size = pop)) +
geom_point(alpha = 0.7, show.legend = FALSE, na.rm = TRUE) +
# scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
geom_label_repel(aes(label = Country), size = 2, na.rm = TRUE) +
theme(plot.title = element_text(size = 20, hjust = 0.5)) +
# facet_wrap(~continent) +
# Here comes the gganimate specific bits
labs(title = 'Happiness vs. GDP per Capita Over Time in {round(frame_time,0)}', x = 'GDP per capita', y = 'Happiness')
a
a
a <- ggplot(filter(data, Year==2021), aes(GDPPer, HappinessScore, size = pop)) +
geom_point(alpha = 0.7, show.legend = FALSE, na.rm = TRUE) +
# scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
geom_label_repel(aes(label = Country), size = 2, na.rm = FALSE) +
theme(plot.title = element_text(size = 20, hjust = 0.5)) +
# facet_wrap(~continent) +
# Here comes the gganimate specific bits
labs(title = 'Happiness vs. GDP per Capita Over Time in {round(frame_time,0)}', x = 'GDP per capita', y = 'Happiness')
a
a <- ggplot(filter(data, Year==2021), aes(GDPPer, HappinessScore, size = pop)) +
geom_point(alpha = 0.7, show.legend = FALSE, na.rm = FALSE) +
# scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
geom_label_repel(aes(label = Country), size = 2, na.rm = FALSE) +
theme(plot.title = element_text(size = 20, hjust = 0.5)) +
# facet_wrap(~continent) +
# Here comes the gganimate specific bits
labs(title = 'Happiness vs. GDP per Capita Over Time in {round(frame_time,0)}', x = 'GDP per capita', y = 'Happiness')
a
filter(data, Year==2021)
a <- ggplot(filter(data, Year==2021 | !is.na(HappinessScore)), aes(GDPPer, HappinessScore, size = pop)) +
geom_point(alpha = 0.7, show.legend = FALSE, na.rm = FALSE) +
# scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
geom_label_repel(aes(label = Country), size = 2, na.rm = FALSE) +
theme(plot.title = element_text(size = 20, hjust = 0.5)) +
# facet_wrap(~continent) +
# Here comes the gganimate specific bits
labs(title = 'Happiness vs. GDP per Capita Over Time in {round(frame_time,0)}', x = 'GDP per capita', y = 'Happiness')
a
a <- ggplot(filter(data, Year==2021 && !is.na(HappinessScore)), aes(GDPPer, HappinessScore, size = pop)) +
geom_point(alpha = 0.7, show.legend = FALSE, na.rm = FALSE) +
# scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
geom_label_repel(aes(label = Country), size = 2, na.rm = FALSE) +
theme(plot.title = element_text(size = 20, hjust = 0.5)) +
# facet_wrap(~continent) +
# Here comes the gganimate specific bits
labs(title = 'Happiness vs. GDP per Capita Over Time in {round(frame_time,0)}', x = 'GDP per capita', y = 'Happiness')
a
#install needed packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
"ggplot2",
"tidyverse",
"dplyr",
"CGPfunctions",
"rnaturalearth",
"sf",
"cowplot",
"gganimate",
"gifski",
"wbstats",
"reshape2",
"ggrepel"
)
Sys.setlocale("LC_TIME", "English")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
data <- read.csv("data/DataForTable2.1.csv")
# Getting additional stats for countries
my_indicators <- c(
life_exp = "SP.DYN.LE00.IN",
gdp_capita ="NY.GDP.PCAP.CD",
pop = "SP.POP.TOTL"
)
world_stats <- wb_data(my_indicators, start_date = min(data$year), end_date = max(data$year))
# Inspecting dataframe
nrow(data)
data <- data[complete.cases(data),]  #only complete dataset
nrow(data)
#drop the below columns
# ["NegativeEffect","PositiveEffect","Confidence"]
names(data)
head(data)
tail(data)
#Rename Columns
names(data)<-c("Country",
"Year",
"HappinessScore",  #"LifeLadder"
"GDPPer",
"SocialSupport",
"LifeExpectancy",
"Freedom",
"Generosity",
"Corruption",
"PositiveEffect",
"NegativeEffect",
"Confidence")
names(data)
# Add missing years
countries <- unique(data$Country)
years <- unique(data$Year)
all <- data.frame(expand.grid(countries,years))
names(all) <- c("Country", "Year")
data <- left_join(all,data, by = c("Country"="Country", "Year" = "Year"))
data <- left_join(data,world_stats, by = c("Country"="country", "Year" = "date"))
head(data)
tail(data)
nrow(data)
str(data)
summary(data)
# get world geo data
world <- ne_countries(scale = "medium", returnclass = "sf")
# filter to 2021
data_2021 <- data %>%
mutate(HappinessScore = round(HappinessScore,2)) %>%
filter(Year == 2021)
# join spacial data with dataset
data_world <- full_join(data_2021, world, by = c("Country"="name"))
# create base world plot
theme_set(theme_bw())
gworld_base <-
ggplot(data = data_world) +
coord_sf(expand = FALSE) +
geom_sf(aes(geometry =  geometry, fill =  HappinessScore)) +
scale_fill_gradient(low="red", high="green",na.value = "grey")
# World Plot
gworld <-
gworld_base +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(title = "Happiness Worldwide in 2021")
gworld
# Use world base plot for subplot
gworld_sub <-
gworld_base +
geom_rect(xmin = -30, xmax = 50, ymin = 35, ymax = 70,
fill = NA, colour = "black", size = 1.5) +
theme(legend.position= 'none',
axis.text = element_blank(),
axis.ticks=element_blank(),
)
# create plot for Europe
geurope <- ggplot(data = data_world) +
# geom_sf(aes(fill = income_grp)) +
coord_sf(expand = FALSE) +
geom_sf(aes(geometry =  geometry, fill =  HappinessScore)) +
scale_fill_gradient(low="red", high="green",na.value = "grey") +
coord_sf(xlim = c(-30, 50), ylim = c(35, 70), expand = TRUE) +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(title = "Happiness Europe in 2021")
# generate plot
ggdraw() +
draw_plot(geurope,
0, 0, 1, 1) +
draw_plot(gworld_sub,
0.03, 0.25, 0.2, 0.2)
p <- ggplot(data, aes(GDPPer, HappinessScore, size = pop, colour = Country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
# scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
# geom_label_repel(aes(label = Country), size = 2) +
# facet_wrap(~continent) +
# Here comes the gganimate specific bits
theme(plot.title = element_text(size = 20, hjust = 0.5)) +
labs(title = 'Happiness vs. GDP per Capita Over Time in {round(frame_time,0)}', x = 'GDP per capita', y = 'Happiness') +
transition_time(Year) +
ease_aes('linear')
a <- ggplot(filter(data, Year==2021 && !is.na(HappinessScore)), aes(GDPPer, HappinessScore, size = pop)) +
geom_point(alpha = 0.7, show.legend = FALSE, na.rm = FALSE) +
# scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
geom_label_repel(aes(label = Country), size = 2, na.rm = FALSE) +
theme(plot.title = element_text(size = 20, hjust = 0.5)) +
# facet_wrap(~continent) +
# Here comes the gganimate specific bits
labs(title = 'Happiness vs. GDP per Capita Over Time in {round(frame_time,0)}', x = 'GDP per capita', y = 'Happiness')
a
filter(data, Year==2021 && !is.na(HappinessScore))
filter(data, Year==2021 && !is.na(data$HappinessScore))
!is.na(data$HappinessScore)
filter(data, Year==2021 & !is.na(data$HappinessScore))
a <- ggplot(filter(data, Year==2021 & !is.na(data$HappinessScore)), aes(GDPPer, HappinessScore, size = pop)) +
geom_point(alpha = 0.7, show.legend = FALSE, na.rm = FALSE) +
# scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
geom_label_repel(aes(label = Country), size = 2, na.rm = FALSE) +
theme(plot.title = element_text(size = 20, hjust = 0.5)) +
# facet_wrap(~continent) +
# Here comes the gganimate specific bits
labs(title = 'Happiness vs. GDP per Capita Over Time in {round(frame_time,0)}', x = 'GDP per capita', y = 'Happiness')
a
a <- ggplot(filter(data, !is.na(data$HappinessScore)), aes(GDPPer, HappinessScore, size = pop)) +
geom_point(alpha = 0.7, show.legend = FALSE, color = Country, na.rm = FALSE) +
# scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
geom_label_repel(aes(label = Country), size = 2, na.rm = FALSE) +
theme(plot.title = element_text(size = 20, hjust = 0.5)) +
# facet_wrap(~continent) +
# Here comes the gganimate specific bits
labs(title = 'Happiness vs. GDP per Capita Over Time in {round(frame_time,0)}', x = 'GDP per capita', y = 'Happiness')
a <- ggplot(filter(data, !is.na(data$HappinessScore)), aes(GDPPer, HappinessScore, size = pop)) +
geom_point(alpha = 0.7, show.legend = FALSE, aes(color = Country), na.rm = FALSE) +
# scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
geom_label_repel(aes(label = Country), size = 2, na.rm = FALSE) +
theme(plot.title = element_text(size = 20, hjust = 0.5)) +
# facet_wrap(~continent) +
# Here comes the gganimate specific bits
labs(title = 'Happiness vs. GDP per Capita Over Time in {round(frame_time,0)}', x = 'GDP per capita', y = 'Happiness') +
transition_time(Year) +
shadow_wake(0.5) +
ease_aes('linear')
animate(a, renderer = gifski_renderer(), start_pause = 2, end_pause = 30,duration = 60)
anim_save(a, "HappinessVsGDP.gif")
gif <- animate(a, renderer = gifski_renderer(), start_pause = 2, end_pause = 30,duration = 60)
gglot(data, aes(x= Year, y= HappinessScore) ) +
geom_line()
gglot(data, aes(x= Year, y= HappinessScore) ) +
geom_line()
ggplot(data, aes(x= Year, y= HappinessScore) ) +
geom_line()
ggplot(data, aes(x= Year, y= mean(HappinessScore)) ) +
geom_line()
ggplot(data, aes(x= Year, y= mean(HappinessScore)) ) +
geom_point() +
geom_line()
ggplot(data, aes(x= Year, y= mean(HappinessScore), group Country) ) +
geom_point() +
geom_line()
ggplot(data, aes(x= Year, y= HappinessScore, group =  Country) ) +
geom_point() +
geom_line()
# Getting additional stats for countries
my_indicators <- c(
region = "regions",
life_exp = "SP.DYN.LE00.IN",
gdp_capita ="NY.GDP.PCAP.CD",
pop = "SP.POP.TOTL"
)
world_stats <- wb_data(my_indicators, start_date = min(data$year), end_date = max(data$year))
data <- read.csv("data/DataForTable2.1.csv")
# Getting additional stats for countries
my_indicators <- c(
region = "regions",
life_exp = "SP.DYN.LE00.IN",
gdp_capita ="NY.GDP.PCAP.CD",
pop = "SP.POP.TOTL"
)
world_stats <- wb_data(my_indicators, start_date = min(data$year), end_date = max(data$year))
# Getting additional stats for countries
my_indicators <- c(
region = "region",
life_exp = "SP.DYN.LE00.IN",
gdp_capita ="NY.GDP.PCAP.CD",
pop = "SP.POP.TOTL"
)
world_stats <- wb_data(my_indicators, start_date = min(data$year), end_date = max(data$year))
world_stats <- wb_data(my_indicators,country = c("country", "region") start_date = min(data$year), end_date = max(data$year))
# Getting additional stats for countries
my_indicators <- c(
life_exp = "SP.DYN.LE00.IN",
gdp_capita ="NY.GDP.PCAP.CD",
pop = "SP.POP.TOTL"
)
world_stats <- wb_data(my_indicators,country = c("country", "region") start_date = min(data$year), end_date = max(data$year))
world_stats <- wb_data(my_indicators,country = c("country", "region"), start_date = min(data$year), end_date = max(data$year))
wbdatacatalog()
world
names(world)
world[:,c("name","economy","continent", "subregion")]
world[c("name","economy","continent", "subregion")]
data <- left_join(data, world[c("name","economy","continent", "subregion")])
data <- left_join(data, world[c("name","economy","continent", "subregion")], by = c("Country"="name"))
#Rename Columns
names(data)<-c("Country",
"Year",
"HappinessScore",  #"LifeLadder"
"GDPPer",
"SocialSupport",
"LifeExpectancy",
"Freedom",
"Generosity",
"Corruption",
"PositiveEffect",
"NegativeEffect",
"Confidence")
#install needed packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
"ggplot2",
"tidyverse",
"dplyr",
"CGPfunctions",
"rnaturalearth",
"sf",
"cowplot",
"gganimate",
"gifski",
"wbstats",
"reshape2",
"ggrepel"
)
Sys.setlocale("LC_TIME", "English")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
data <- read.csv("data/DataForTable2.1.csv")
# Getting additional stats for countries
my_indicators <- c(
life_exp = "SP.DYN.LE00.IN",
gdp_capita ="NY.GDP.PCAP.CD",
pop = "SP.POP.TOTL"
)
world_stats <- wb_data(my_indicators,country = c("country", "region"), start_date = min(data$year), end_date = max(data$year))
world_stats <- wb_data(my_indicators, start_date = min(data$year), end_date = max(data$year))
# Inspecting dataframe
nrow(data)
data <- data[complete.cases(data),]  #only complete dataset
nrow(data)
#drop the below columns
# ["NegativeEffect","PositiveEffect","Confidence"]
names(data)
head(data)
tail(data)
#Rename Columns
names(data)<-c("Country",
"Year",
"HappinessScore",  #"LifeLadder"
"GDPPer",
"SocialSupport",
"LifeExpectancy",
"Freedom",
"Generosity",
"Corruption",
"PositiveEffect",
"NegativeEffect",
"Confidence")
names(data)
# Add missing years
countries <- unique(data$Country)
years <- unique(data$Year)
all <- data.frame(expand.grid(countries,years))
names(all) <- c("Country", "Year")
data <- left_join(all,data, by = c("Country"="Country", "Year" = "Year"))
data <- left_join(data,world_stats, by = c("Country"="country", "Year" = "date"))
world <- ne_countries(scale = "medium", returnclass = "sf")
data <- left_join(data, world[c("name","economy","continent", "subregion")], by = c("Country"="name"))
head(data)
ggplot(data, aes(x= Year, y= HappinessScore, group =  subregion) ) +
geom_point() +
geom_line()
ggplot() +
geom_point(data %>% group_by(Year) %>% summarise(mean(HappinessScore)),
mapping = aes(x= Year, y= HappinessScore))
data %>% group_by(Year) %>% summarise(mean(HappinessScore))
ggplot() +
geom_point(data %>% group_by(Year) %>% summarise(mean(HappinessScore,na.rm = TRUE )),
mapping = aes(x= Year, y= HappinessScore))
ggplot() +
geom_point(data %>% group_by(Year) %>% summarise(mean(data$HappinessScore,na.rm = TRUE)),
mapping = aes(x= Year, y= HappinessScore))
data %>% group_by(Year)
ggplot() +
geom_point(data %>% group_by(Year) %>% summarise(mean("Happi~1")),
mapping = aes(x= Year, y= HappinessScore))
ggplot() +
geom_point(data %>% group_by(Year) %>% summarise(mean("Happi~1")),
mapping = aes(x= Year, y= "Happi~1"))
ggplot() +
geom_point(data %>% group_by(Year) %>% summarise(mean(HappinessScore)),
mapping = aes(x= Year, y= "Happi~1"))
data %>% group_by(Year) %>% summarise(mean(HappinessScore))
ggplot() +
geom_point(data %>% group_by(Year) %>% summarise(mean(HappinessScore)),
mapping = aes(x= Year, y= "mean(HappinessScore)"))
ggplot() +
geom_point(data %>% group_by(Year) %>% summarise(mean("Happi~1")),
mapping = aes(x= Year, y= "mean(HappinessScore)"))
data %>% group_by(Year) %>% summarise(mean("Happi~1"))
ggplot() +
geom_point(data %>% group_by(Year) %>% summarise(mean("Happi~1", na.rm = TRUE)),
mapping = aes(x= Year, y= "mean(HappinessScore)"))
data %>% group_by(Year) %>% summarise(mean("Happi~1", na.rm = TRUE))
data %>%
group_by(Year) %>%
summarise(mean("Happi~1", na.rm = TRUE))
ggplot() +
geom_point(data %>%
group_by(Year) %>%
summarise_at(HappinessScore, mean),
mapping = aes(x= Year, y= "mean(HappinessScore)"))
geom_point(data %>%
group_by(Year)
data %>%
group_by(Year)
data %>%
group_by(Year)
data %>%
group_by(Year) %>%
summarise_at("Happi~1", mean)
data %>%
group_by(Year) %>%
summarise(mean = mean(HappinessScore))
ggplot() +
geom_point(data %>%
group_by(Year) %>%
summarise(mean = mean(HappinessScore, na.rm = TRUE)),
mapping = aes(x= Year, y= "mean(HappinessScore)"))
data %>%
group_by(Year) %>%
summarise(mean = mean(HappinessScore, na.rm = TRUE))
ggplot() +
geom_point(data %>%
group_by(Year) %>%
summarise(mean = mean(HappinessScore, na.rm = TRUE)),
mapping = aes(x= Year, y= mean))
ggplot() +
geom_point(data %>%
group_by(Year) %>%
summarise(mean = mean(HappinessScore, na.rm = TRUE)),
mapping = aes(x= Year, y= mean)) +
geom_line()
ggplot(data %>%
group_by(Year) %>%
summarise(mean = mean(HappinessScore, na.rm = TRUE)),
mapping = aes(x= Year, y= mean)) +
geom_point() +
geom_line()
data %>%
group_by(Year) %>%
summarise(mean = mean(HappinessScore, na.rm = TRUE))
ggplot() +
geom_point(data %>%
group_by(Year) %>%
summarise(mean = mean(HappinessScore, na.rm = TRUE)),
mapping = aes(x= Year, y= mean)) +
geom_line(data %>%
group_by(Year) %>%
summarise(mean = mean(HappinessScore, na.rm = TRUE)),
mapping = aes(x= Year, y= mean))
data %>%
group_by(Year, continent) %>%
summarise(mean = mean(HappinessScore, na.rm = TRUE))
ggplot() +
geom_point(data %>%
group_by(Year) %>%
summarise(mean = mean(HappinessScore, na.rm = TRUE)),
mapping = aes(x= Year, y= mean)) +
geom_line(data %>%
group_by(Year) %>%
summarise(mean = mean(HappinessScore, na.rm = TRUE)),
mapping = aes(x= Year, y= mean)) +
geom_point(data %>%
group_by(Year, continent) %>%
summarise(mean = mean(HappinessScore, na.rm = TRUE)),
mapping = aes(x= Year, y= mean, color = continent)) +
geom_line(data %>%
group_by(Year, continent) %>%
summarise(mean = mean(HappinessScore, na.rm = TRUE)),
mapping = aes(x= Year, y= mean, color = continent)) +
ggplot() +
# geom_point(data %>%
#              group_by(Year) %>%
#              summarise(mean = mean(HappinessScore, na.rm = TRUE)),
#            mapping = aes(x= Year, y= mean)) +
# geom_line(data %>%
#             group_by(Year) %>%
#             summarise(mean = mean(HappinessScore, na.rm = TRUE)),
#           mapping = aes(x= Year, y= mean)) +
geom_point(data %>%
group_by(Year, continent) %>%
summarise(mean = mean(HappinessScore, na.rm = TRUE)),
mapping = aes(x= Year, y= mean, color = continent)) +
geom_line(data %>%
group_by(Year, continent) %>%
summarise(mean = mean(HappinessScore, na.rm = TRUE)),
mapping = aes(x= Year, y= mean, color = continent)) +
data %>%
group_by(Year, continent) %>%
summarise(mean = mean(HappinessScore, na.rm = TRUE))
data %>%
group_by(Year, continent) %>%
summarise(mean = mean(HappinessScore, na.rm = TRUE))
