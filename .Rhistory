title = "Happiness Under COVID-19") +
scale_color_manual(values = c('steelblue', '#D22630', 'black'))
ggplot(filter(data_line, Country %in% c("World","Europe","Poland") & Year >= 2010),aes(Year,HappinessScore, group = Country, color = Country)) +
geom_rect(aes(xmin = 2019, ymin = -Inf,
xmax = Inf, ymax = Inf),
alpha = .4, fill = "grey", color = NA
) +
geom_line(size = 1.2) +
geom_point() +
geom_vline(xintercept = 2019,color = "black", size = 2) +
geom_dl(aes(label = Country), method = list(dl.combine("last.points"))) +
annotate("text", x = 2019, y = 7, label = "COVID-19", vjust = 2, hjust=-0.1) +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(color = NULL,
title = "Happiness Under COVID-19") +
scale_color_manual(values = c('#003399', '#D22630', 'black'))
ggplot(filter(data_line, Country %in% c("World","Europe","Poland") & Year >= 2010),aes(Year,HappinessScore, group = Country, color = Country)) +
geom_rect(aes(xmin = 2019, ymin = -Inf,
xmax = Inf, ymax = Inf),
alpha = .4, fill = "grey", color = NA
) +
geom_line(size = 1.2) +
geom_point() +
geom_vline(xintercept = 2019,color = "black", size = 2) +
geom_dl(aes(label = Country), method = list(dl.combine("last.points"))) +
annotate("text", x = 2019, y = 7, label = "COVID-19", vjust = 2, hjust=-0.1, size = 2) +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(color = NULL,
title = "Happiness Under COVID-19") +
scale_color_manual(values = c('#003399', '#D22630', 'black'))
ggplot(filter(data_line, Country %in% c("World","Europe","Poland") & Year >= 2010),aes(Year,HappinessScore, group = Country, color = Country)) +
geom_rect(aes(xmin = 2019, ymin = -Inf,
xmax = Inf, ymax = Inf),
alpha = .4, fill = "grey", color = NA
) +
geom_line(size = 1.2) +
geom_point() +
geom_vline(xintercept = 2019,color = "black", size = 2) +
geom_dl(aes(label = Country), method = list(dl.combine("last.points"))) +
annotate("text", x = 2019, y = 7, label = "COVID-19", vjust = 2, hjust=-0.1, size = 10) +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(color = NULL,
title = "Happiness Under COVID-19") +
scale_color_manual(values = c('#003399', '#D22630', 'black'))
ggplot(filter(data_line, Country %in% c("World","Europe","Poland") & Year >= 2010),aes(Year,HappinessScore, group = Country, color = Country)) +
geom_rect(aes(xmin = 2019, ymin = -Inf,
xmax = Inf, ymax = Inf),
alpha = .4, fill = "grey", color = NA
) +
geom_line(size = 1.2) +
geom_point() +
geom_vline(xintercept = 2019,color = "black", size = 2) +
geom_dl(aes(label = Country), method = list(dl.combine("last.points"))) +
annotate("text", x = 2019, y = 7, label = "COVID-19", vjust = 2, hjust=-0.1, size = 5) +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(color = NULL,
title = "Happiness Under COVID-19") +
scale_color_manual(values = c('#003399', '#D22630', 'black'))
ggplot(data = data, aes(y = HappinessScore, x = continent)) +
geom_boxplot() +
stat_summary(geom = 'point', shape = 15, fun = mean, size = 2)
ggplot(data = filter(data, !is.na(data$continent)),
aes(y = HappinessScore, x = continent)) +
geom_boxplot() +
stat_summary(geom = 'point', shape = 15, fun = mean, size = 2)
ggplot(data = filter(data, !is.na(data$continent)),
aes(y = HappinessScore, x = continent, color = continent)) +
geom_boxplot() +
stat_summary(geom = 'point', shape = 15, fun = mean, size = 2)
ggplot(data = filter(data, !is.na(data$continent)),
aes(y = HappinessScore, x = continent)) +
geom_boxplot() +
stat_summary(geom = 'point', shape = 15, fun = mean, size = 2)+
+ facet_wrap(~ continent)
ggplot(data = filter(data, !is.na(data$continent)),
aes(y = HappinessScore, x = continent)) +
geom_boxplot() +
stat_summary(geom = 'point', shape = 15, fun = mean, size = 2)+
facet_wrap(~ continent)
ggplot(data = filter(data, !is.na(data$continent)),
aes(y = HappinessScore, x = Country)) +
geom_boxplot() +
stat_summary(geom = 'point', shape = 15, fun = mean, size = 2)+
facet_wrap(~ continent)
ggplot(data = filter(data, !is.na(data$continent)),
aes(y = HappinessScore, x = continent)) +
geom_boxplot() +
stat_summary(geom = 'point', shape = 15, fun = mean, size = 2)
ggplot(data = filter(data, !is.na(data$continent)),
aes(y = HappinessScore, x = continent)) +
geom_boxplot() +
stat_summary(geom = 'point', shape = 15, fun = mean, size = 2) +
labs(title = "Happiness Compared by Country")
ggplot(data = filter(data, !is.na(data$continent)),
aes(y = HappinessScore, x = continent)) +
geom_boxplot() +
stat_summary(geom = 'point', shape = 15, fun = mean, size = 2) +
labs(title = "Happiness Compared by Country") +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5))
ggplot(data = filter(data, !is.na(data$continent)),
aes(y = HappinessScore, x = continent)) +
geom_boxplot() +
stat_summary(geom = 'point', shape = 15, fun = mean, size = 2) +
labs(title = "Happiness Compared by Country",
xlab(NA)) +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5))
ggplot(data = filter(data, !is.na(data$continent)),
aes(y = HappinessScore, x = continent)) +
geom_boxplot() +
stat_summary(geom = 'point', shape = 15, fun = mean, size = 2) +
labs(title = "Happiness Compared by Country",
x = NA) +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5))
ggplot(data = filter(data, !is.na(data$continent)),
aes(y = HappinessScore, x = continent)) +
geom_boxplot() +
stat_summary(geom = 'point', shape = 15, fun = mean, size = 2) +
labs(title = "Happiness Compared by Country",
x = "") +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5))
ggplot(data = filter(data, !is.na(data$continent)),
aes(y = HappinessScore, x = continent)) +
geom_boxplot() +
stat_summary(geom = 'point', shape = 15, fun = mean, size = 2) +
labs(title = "Happiness Compared by Country",
x = "",
caption = "Own creation. Data: World Happiness Report") +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5))
ggplot(data = filter(data, !is.na(data$continent)),
aes(y = HappinessScore, x = continent)) +
geom_boxplot() +
stat_summary(geom = 'point', shape = 15, fun = mean, size = 2) +
labs(title = "Happiness Compared by Country",
x = "",
caption = "Own creation. Data: World Happiness Report, World Bank") +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5))
#install needed packages
if (!require("pacman")) install.packages("pacman")
#install needed packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
"ggplot2",
"tidyverse",
"dplyr",
"CGPfunctions",
"rnaturalearth",
"sf",
"cowplot",
"gganimate",
"gifski",
"wbstats",
"reshape2",
"ggrepel",
"directlabels"
)
Sys.setlocale("LC_TIME", "English")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
data <- read.csv("data/DataForTable2.1.csv")
# Getting additional stats for countries
my_indicators <- c(
life_exp = "SP.DYN.LE00.IN",
gdp_capita ="NY.GDP.PCAP.CD",
pop = "SP.POP.TOTL"
)
world_stats <- wb_data(my_indicators, start_date = min(data$year), end_date = max(data$year))
# Inspecting dataframe
nrow(data)
data <- data[complete.cases(data),]  #only complete dataset
nrow(data)
#drop the below columns
# ["NegativeEffect","PositiveEffect","Confidence"]
names(data)
head(data)
tail(data)
#Rename Columns
names(data)<-c("Country",
"Year",
"HappinessScore",  #"LifeLadder"
"GDPPer",
"SocialSupport",
"LifeExpectancy",
"Freedom",
"Generosity",
"Corruption",
"PositiveEffect",
"NegativeEffect",
"Confidence")
names(data)
# Add missing years
countries <- unique(data$Country)
years <- unique(data$Year)
all <- data.frame(expand.grid(countries,years))
names(all) <- c("Country", "Year")
data <- left_join(all,data, by = c("Country"="Country", "Year" = "Year"))
data <- left_join(data,world_stats, by = c("Country"="country", "Year" = "date"))
world <- ne_countries(scale = "medium", returnclass = "sf")
data <- left_join(data, world[c("name","economy","continent", "subregion")], by = c("Country"="name"))
head(data)
tail(data)
nrow(data)
str(data)
summary(data)
# filter to 2021
data_2021 <- data %>%
mutate(HappinessScore = round(HappinessScore,2)) %>%
filter(Year == 2021)
# join spacial data with dataset
data_world <- full_join(data_2021, world, by = c("Country"="name"))
# create base world plot
theme_set(theme_bw())
gworld_base <-
ggplot(data = data_world) +
coord_sf(expand = FALSE) +
geom_sf(aes(geometry =  geometry, fill =  HappinessScore)) +
scale_fill_gradient(low="red", high="green",na.value = "grey")
# World Plot
gworld <-
gworld_base +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(title = "Happiness Worldwide in 2021",
caption = "Own creation. Data: World Happiness Report, World Bank")
gworld
gworld_base
data_world
data <- read.csv("data/DataForTable2.1.csv")
# Getting additional stats for countries
my_indicators <- c(
life_exp = "SP.DYN.LE00.IN",
gdp_capita ="NY.GDP.PCAP.CD",
pop = "SP.POP.TOTL"
)
world_stats <- wb_data(my_indicators, start_date = min(data$year), end_date = max(data$year))
# Inspecting dataframe
nrow(data)
data <- data[complete.cases(data),]  #only complete dataset
nrow(data)
#drop the below columns
# ["NegativeEffect","PositiveEffect","Confidence"]
names(data)
head(data)
tail(data)
#Rename Columns
names(data)<-c("Country",
"Year",
"HappinessScore",  #"LifeLadder"
"GDPPer",
"SocialSupport",
"LifeExpectancy",
"Freedom",
"Generosity",
"Corruption",
"PositiveEffect",
"NegativeEffect",
"Confidence")
names(data)
# Add missing years
countries <- unique(data$Country)
years <- unique(data$Year)
all <- data.frame(expand.grid(countries,years))
names(all) <- c("Country", "Year")
data <- left_join(all,data, by = c("Country"="Country", "Year" = "Year"))
data <- left_join(data,world_stats, by = c("Country"="country", "Year" = "date"))
world <- ne_countries(scale = "medium", returnclass = "sf")
world[c("name","economy","continent", "subregion")]
data <- left_join(data, world[c("name","economy","continent", "subregion")], by = c("Country"="name"))
# filter to 2021
data_2021 <- data %>%
mutate(HappinessScore = round(HappinessScore,2)) %>%
filter(Year == 2021)
gworld_base <-
ggplot(data = data_2021) +
coord_sf(expand = FALSE) +
geom_sf(aes(geometry =  geometry, fill =  HappinessScore)) +
scale_fill_gradient(low="red", high="green",na.value = "grey")
# World Plot
gworld <-
gworld_base +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(title = "Happiness Worldwide in 2021",
caption = "Own creation. Data: World Happiness Report, World Bank")
gworld
# join spacial data with dataset
data_world <- full_join(data_2021, world, by = c("Country"="name","economy","continent", "subregion","geometry"))
gworld_base <-
ggplot(data = data_world) +
coord_sf(expand = FALSE) +
geom_sf(aes(geometry =  geometry, fill =  HappinessScore)) +
scale_fill_gradient(low="red", high="green",na.value = "grey")
# World Plot
gworld <-
gworld_base +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(title = "Happiness Worldwide in 2021",
caption = "Own creation. Data: World Happiness Report, World Bank")
gworld
# Use world base plot for subplot
gworld_sub <-
gworld_base +
geom_rect(xmin = -30, xmax = 50, ymin = 35, ymax = 70,
fill = NA, colour = "black", size = 1.5) +
theme(legend.position= 'none',
axis.text = element_blank(),
axis.ticks=element_blank(),
)
# create plot for Europe
geurope <- ggplot(data = data_world) +
# geom_sf(aes(fill = income_grp)) +
coord_sf(expand = FALSE) +
geom_sf(aes(geometry =  geometry, fill =  HappinessScore)) +
scale_fill_gradient(low="red", high="green",na.value = "grey") +
coord_sf(xlim = c(-30, 50), ylim = c(35, 70), expand = TRUE) +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(title = "Happiness Europe in 2021",
caption = "Own creation. Data: World Happiness Report, World Bank")
# generate plot
ggdraw() +
draw_plot(geurope,
0, 0, 1, 1) +
draw_plot(gworld_sub,
0.03, 0.25, 0.2, 0.2)
# create plot for Europe
geurope <- ggplot(data = data_world) +
# geom_sf(aes(fill = income_grp)) +
coord_sf(expand = FALSE) +
geom_sf(aes(geometry =  geometry, fill =  HappinessScore)) +
scale_fill_gradient(low="red", high="green",na.value = "grey") +
coord_sf(xlim = c(-30, 50), ylim = c(35, 70), expand = TRUE) +
annotate("Poland", x=20, y=51)
geurope +annotate("Poland", x=20, y=51)
# create plot for Europe
geurope <- ggplot(data = data_world) +
# geom_sf(aes(fill = income_grp)) +
coord_sf(expand = FALSE) +
geom_sf(aes(geometry =  geometry, fill =  HappinessScore)) +
scale_fill_gradient(low="red", high="green",na.value = "grey") +
coord_sf(xlim = c(-30, 50), ylim = c(35, 70), expand = TRUE) +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(title = "Happiness Europe in 2021",
caption = "Own creation. Data: World Happiness Report, World Bank")
geurope +annotate("Poland", x=20, y=51)
geurope + geom_sf_text(aes(label = Country), colour = "white")
# create plot for Europe
geurope <- ggplot(data = data_world) +
# geom_sf(aes(fill = income_grp)) +
coord_sf(expand = FALSE) +
geom_sf(aes(geometry =  geometry, fill =  HappinessScore)) +
scale_fill_gradient(low="red", high="green",na.value = "grey") +
coord_sf(xlim = c(-30, 50), ylim = c(35, 70), expand = TRUE) +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(title = "Happiness Europe in 2021",
caption = "Own creation. Data: World Happiness Report, World Bank")
geurope + geom_sf_text(aes(label = Country), colour = "white")
geurope + geom_sf_text(aes(geometry =  geometry,label = Country), colour = "white")
geurope + geom_sf_text(aes(geometry =  geometry,label = Country), colour = "black")
# create plot for Europe
geurope <- ggplot(data = data_world) +
# geom_sf(aes(fill = income_grp)) +
coord_sf(expand = FALSE) +
geom_sf(aes(geometry =  geometry, fill =  HappinessScore)) +
annotate(geom = "text", x = 20, y = 51, label = "Gulf of Mexico",
fontface = "italic", color = "grey22", size = 6) +
scale_fill_gradient(low="red", high="green",na.value = "grey") +
coord_sf(xlim = c(-30, 50), ylim = c(35, 70), expand = TRUE) +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(title = "Happiness Europe in 2021",
caption = "Own creation. Data: World Happiness Report, World Bank")
geurope
# create plot for Europe
geurope <- ggplot(data = data_world) +
# geom_sf(aes(fill = income_grp)) +
coord_sf(expand = FALSE) +
geom_sf(aes(geometry =  geometry, fill =  HappinessScore)) +
annotate(geom = "text", x = 20, y = 51, label = "Poland",
fontface = "italic", color = "grey22", size = 1) +
scale_fill_gradient(low="red", high="green",na.value = "grey") +
coord_sf(xlim = c(-30, 50), ylim = c(35, 70), expand = TRUE) +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(title = "Happiness Europe in 2021",
caption = "Own creation. Data: World Happiness Report, World Bank")
geurope
# create plot for Europe
geurope <- ggplot(data = data_world) +
# geom_sf(aes(fill = income_grp)) +
coord_sf(expand = FALSE) +
geom_sf(aes(geometry =  geometry, fill =  HappinessScore)) +
annotate(geom = "text", x = 20, y = 51, label = "Poland",
fontface = "italic", color = "grey22", size = 5) +
scale_fill_gradient(low="red", high="green",na.value = "grey") +
coord_sf(xlim = c(-30, 50), ylim = c(35, 70), expand = TRUE) +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(title = "Happiness Europe in 2021",
caption = "Own creation. Data: World Happiness Report, World Bank")
geurope
# create plot for Europe
geurope <- ggplot(data = data_world) +
# geom_sf(aes(fill = income_grp)) +
coord_sf(expand = FALSE) +
geom_sf(aes(geometry =  geometry, fill =  HappinessScore)) +
annotate(geom = "text", x = 20, y = 52, label = "Poland",
fontface = "italic", color = "grey22", size = 5) +
scale_fill_gradient(low="red", high="green",na.value = "grey") +
coord_sf(xlim = c(-30, 50), ylim = c(35, 70), expand = TRUE) +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(title = "Happiness Europe in 2021",
caption = "Own creation. Data: World Happiness Report, World Bank")
geurope
# create plot for Europe
geurope <- ggplot(data = data_world) +
# geom_sf(aes(fill = income_grp)) +
coord_sf(expand = FALSE) +
geom_sf(aes(geometry =  geometry, fill =  HappinessScore)) +
annotate(geom = "text", x = 19, y = 52, label = "Poland",
fontface = "italic", color = "grey22", size = 5) +
scale_fill_gradient(low="red", high="green",na.value = "grey") +
coord_sf(xlim = c(-30, 50), ylim = c(35, 70), expand = TRUE) +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(title = "Happiness Europe in 2021",
caption = "Own creation. Data: World Happiness Report, World Bank")
geurope
# create plot for Europe
geurope <- ggplot(data = data_world) +
# geom_sf(aes(fill = income_grp)) +
coord_sf(expand = FALSE) +
geom_sf(aes(geometry =  geometry, fill =  HappinessScore)) +
annotate(geom = "text", x = 19, y = 52, label = "Poland",
fontface = "italic", color = "black", size = 5) +
scale_fill_gradient(low="red", high="green",na.value = "grey") +
coord_sf(xlim = c(-30, 50), ylim = c(35, 70), expand = TRUE) +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(title = "Happiness Europe in 2021",
caption = "Own creation. Data: World Happiness Report, World Bank")
geurope
# create plot for Europe
geurope <- ggplot(data = data_world) +
# geom_sf(aes(fill = income_grp)) +
coord_sf(expand = FALSE) +
geom_sf(aes(geometry =  geometry, fill =  HappinessScore)) +
annotate(geom = "text", x = 19, y = 52, label = "Poland",
fontface = "italic", color = "black", size = 4) +
scale_fill_gradient(low="red", high="green",na.value = "grey") +
coord_sf(xlim = c(-30, 50), ylim = c(35, 70), expand = TRUE) +
theme(legend.position = 'bottom',
plot.title = element_text(size = 20, hjust = 0.5)) +
labs(title = "Happiness Europe in 2021",
caption = "Own creation. Data: World Happiness Report, World Bank")
geurope
# Make a ggplot, but add frame=year: one image per year
bubble <- ggplot(data, aes(GDPPer, HappinessScore, size = pop, color = continent)) +
geom_point(alpha = 0.7) +
scale_x_log10() +
theme_bw() +
# gganimate specific bits:
labs(title = 'Year: {frame_time}', x = 'GDP per Capita', y = 'Happiness') +
transition_time(year) +
ease_aes('linear')
# Save at gif:
anim_save(bubble,"BubbleChart.gif")
# Save at gif:
anim_save(bubble,"BubbleChart.gif",renderer = gifski_renderer())
# Save at gif:
gif <- animate(bubble)
# Make a ggplot, but add frame=year: one image per year
bubble <- ggplot(data, aes(GDPPer, HappinessScore, size = pop, color = continent)) +
geom_point(alpha = 0.7) +
scale_x_log10() +
theme_bw() +
# gganimate specific bits:
labs(title = 'Year: {frame_time}', x = 'GDP per Capita', y = 'Happiness') +
transition_time(year) +
ease_aes('linear')
# Save at gif:
gif <- animate(bubble)
# Make a ggplot, but add frame=year: one image per year
bubble <- ggplot(data, aes(GDPPer, HappinessScore, size = pop, color = continent)) +
geom_point(alpha = 0.7) +
scale_x_log10() +
theme_bw() +
# gganimate specific bits:
labs(title = 'Year: {frame_time}', x = 'GDP per Capita', y = 'Happiness') +
transition_time(Year) +
ease_aes('linear')
# Save at gif:
gif <- animate(bubble)
anim_save(bubble,"BubbleChart.gif",renderer = gifski_renderer())
anim_save(gif,"BubbleChart.gif",renderer = gifski_renderer())
# Save at gif:
gif <- animate(bubble,renderer = gifski_renderer())
anim_save(gif,"BubbleChart.gif")
anim_save(gif,"BubbleChart.gif",animation=bubble)
gif
